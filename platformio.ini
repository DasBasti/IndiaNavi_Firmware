; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = espressif32
board_build.partitions = partitions_custom.csv
board_build.embed_txtfiles = src/keys/AmazonRootCA1-4.pem

; any port that starts with /dev/ttyUSB
upload_port = /dev/ttyUSB*
upload_speed = 460800

build_flags =
    -DREV2
	-DCLOCK
    -DEINK_7COLOR
    -DCONFIG_NMEA_PARSER_RING_BUFFER_SIZE=1024
    -DCONFIG_NMEA_PARSER_TASK_STACK_SIZE=3*1024
    -DCONFIG_NMEA_PARSER_TASK_PRIORITY=10
    -DCONFIG_NMEA_STATEMENT_GGA
    -DCONFIG_NMEA_STATEMENT_GSA
    -DCONFIG_NMEA_STATEMENT_GSV
    -DCONFIG_NMEA_STATEMENT_RMC
    -DCONFIG_NMEA_STATEMENT_GLL
    -DCONFIG_NMEA_STATEMENT_VTG
	-DGPS_MAX_PARSER_PLUGINS=2
	-DINITIAL_APP_MODE=APP_MODE_GPS_CREATE
    #-DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG
monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
	log2file
	tag_filter
monitor_port = /dev/ttyUSB*

[env:esp32dev_debug]
board = esp32dev
framework = espidf
build_type = debug
test_ignore = host/*
upload_port = /dev/ttyUSB*
upload_speed = 460800
build_flags = 
	-DDEBUG
	-DNO_GPS
	${env.build_flags}
	-DGIT_HASH='"debug"'

[env:esp32dev_release]
board = esp32dev
framework = espidf
test_ignore = host/*
build_flags = 
	${env.build_flags}
	!python .github/git_version.py
	-DLOG_LOCAL_LEVEL=ESP_LOG_ERROR

[env:native]
platform = native
test_ignore = embedded/*
lib_compat_mode = off
build_src_filter = +<*>
build_flags = 
	-DTESTING
	-Ilib/sxml/
	-lm
	-lgcov
	--coverage
	-include test/host/Platinenmacher/mock/mock_log.h
extra_scripts = test/test-coverage.py

[env:esp32dev_jtag]
board = esp32dev
framework = espidf
extends = env:esp32dev_debug
build_flags = 
	-DJTAG
	-DDEBUG
	${env.build_flags}
	-DGIT_HASH='"jtag"'
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
monitor_port = /dev/ttyUSB2
upload_protocol = esp-prog
debug_tool = esp-prog
debug_init_break = tbreak app_main
debug_speed = 2000

[env:indianavi_s3_n16r8_debug]
board = indianavi-s3-n16r8
board_build.partitions = partitions_16M.csv

framework = espidf
build_type = debug
test_ignore = host/*
upload_port = /dev/ttyUSB*
upload_speed = 460800
build_flags = 
    -DESP_S3
	-DDEBUG
	${env.build_flags}
	-DGIT_HASH='"debug"'

[env:indianavi_s3_n16r8_release]
board = indianavi-s3-n16r8
board_build.partitions = partitions_16M.csv

framework = espidf
build_type = release
test_ignore = host/*
upload_port = /dev/ttyUSB*
upload_speed = 460800
build_flags = 
    -DESP_S3
	${env.build_flags}
	!python .github/git_version.py

[env:linux_native]
platform = native
build_src_filter = +<*> -<esp32> -<screens> +<screens/map_screen.c>
build_flags = 
	${env.build_flags}
	!python .github/git_version.py
    -DLINUX
	-DNO_GPS
	-include "src/linux/esp_log.h"
	-Ilib/sxml
	-lX11
	-lm